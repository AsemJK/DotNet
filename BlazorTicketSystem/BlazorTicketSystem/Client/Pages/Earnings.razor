@page "/earnings"
@using BlazorTicketSystem.Client.Components
@using BlazorTicketSystem.Shared;
@using BlazorTicketSystem.Shared.ViewModels
@inject HttpClient Http
<AuthorizeView>
    <NotAuthorized>
        <h1>Welcome, Please login first  </h1>
    </NotAuthorized>
    <Authorized>
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        Earnings
                    </div>
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Category</th>
                                    <th>Subject</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (earnings == null)
                                {
                                    <tr><td colspan="4"><em>Loading...</em></td></tr>
                                }
                                else
                                {
                                    @foreach (var earning in earnings)
                                    {
                                        <tr>
                                            <td>@earning.Date.ToShortDateString()</td>
                                            <td>@earning.Category</td>
                                            <td>@earning.Subject</td>
                                            <td>@earning.Amount.ToString()</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <EarningForm OnSubmitCallback="@Refresh"></EarningForm>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private List<Earning> earnings;
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        earnings = await Http.GetFromJsonAsync<List<Earning>>("api/Earnings");
        StateHasChanged();
    }
    public async void Refresh()
    {
        await LoadData();
    }

}
