@using SWTicket.Shared
@using SWTicket.Shared.Models
@using SWTicket.Shared.ViewModels
@inject HttpClient Http
<div class="card">
    <div class="card-header">
        Add an Earning
    </div>
    <div class="card-body">
        <EditForm Model="@earning" OnValidSubmit="@HandlevalidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="dateInput">Date</label>
                <InputDate class="form-control" id="dateInput" @bind-Value="earning.Date" />
            </div>
            <div class="form-group">
                <label for="dateInput">Subject</label>
                <InputText class="form-control" id="subjectInput" @bind-Value="earning.Subject" />
            </div>
            <div class="form-group">
                <label for="dateInput">Category</label>
                <InputSelect class="form-control" id="categoryInput" @bind-Value="earning.Category">
                    @{
                        foreach (var item in Enum.GetValues(typeof(EarningCategory)))
                        {
                            <option value="@item">@item</option>
                        }
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="dateInput">Amount</label>
                <InputNumber class="form-control" id="amountInput" @bind-Value="earning.Amount" />
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>
    </div>

</div>
@code {
    private EarningModel earning = new EarningModel { Date = DateTime.Now.Date };

    [Parameter]
    public EventCallback OnSubmitCallback { get; set; }

    private async Task HandlevalidSubmit()
    {
        await Http.PostAsJsonAsync<EarningModel>("api/Earnings", earning);
        await OnSubmitCallback.InvokeAsync();
    }
}
